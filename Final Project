books = open("booklist.txt", "r")
library = open("librarylog.txt", "r")

booklst = []  # [Book, number of copies, restrictions]
loglst = []  # [Action, Start date, Student, book, duration]
studentlst = []  # [Student, Book, Start date, end date, restrictions]
popularlst = []  # [Book, # of days borrowed]
popularlst2 = []  # [Book, TOTAL # of days borrowed]
usagelist = []  # [Book, Usage ratio]
inventory = 0


def restriction_check(arg):  # Checks if a book has borrowing restrictions on it
    global maxdays
    for book in booklst:
        if arg in book:
            if book[2] == "FALSE":
                print("You can take out this book for up to 28 days")
                maxdays = 27
            else:
                print("You can take this book out for up to 7 days")
                maxdays = 6


def set_loglst():
    x = library.readline()
    while x != "":
        x = x.strip("\n")
        x = x.split("#")
        loglst.append(x)
        x = library.readline()


def book_check(found):
    inventory = 0
    start_day = int(input("What day would you like to borrow a book? "))
    log_processing(start_day)
    print(booklst)
    count = 0

    bk = input("What book would you like to borrow? ")
    for book in booklst:
        if book[0] == bk:
            inventory = book[1]
            restrictions = book[2]
        else:
            count += 1

    if count == len(booklst):
        print("Sorry we don't have that book.")
        menu()

    if inventory == 0:
        print("Sorry we're out of that book.")
        menu()
    else:
        print("Yes, we have that book!")

    restriction_check(bk)
    duration = int(input("How many days would you like the book for? "))

    if duration > maxdays:
        print("Sorry you can't borrow it for that long")
        menu()

    print("Congrats! You have successfully borrowed the book for", duration, "days.")

    '''
                   bk = input("Which book would you like to borrow? ")
    while found == False:
        for book in booklst:
            if bk in book:
                print("We have that book!")
                restriction_check(bk)
                start = int(input("What day do you want to borrow this book? "))
                ans = int(input("How many days do you want to take this book out for? "))
                found = True 


        if not found:
            print("Sorry, we don't have that.")
        break
    '''


def set_booklst():
    x = books.readline()
    while x != "":
        x = x.strip("\n")
        booklst.append(x.split("#"))
        x = books.readline()


def fine_check():
    end = int(input("What particular day would you like to know the fines for?"))
    log_processing(end)
    print(studentlst)
    count = 0
    fine_lst = []

    for student in studentlst:
        if student[1][0] == "$":
            fine_lst.append(student)
            count += 1
    print(fine_lst)
    if count >= 3:
        valid = False
    else:
        valid = True
    for fine in fine_lst:
        print(fine[0] + " owes " + fine[1] + " still")


def popular_books():
    for book in booklst:
        sum = 0
        for match in popularlst:
            if match[0] == book[0]:
                sum += int(match[1])
        popularlst2.append([book[0], sum])
    popularlst2.sort(key=lambda popularlst2: popularlst2[1])
    popularlst2.reverse()
    print(popularlst2)


def usage_ratio():
    start = 30
    log_processing(start)
    print(popularlst2[1], "pop")
    temp = int(popularlst2[1])
    for book in booklst:
        total = (book[1] * 29)
        ratio = temp / total
        print(ratio, "%")


def log_processing(start):
    # booklst = [] # [Book, number of copies, restrictions]
    # studentlst = [] # [Student, Book, Start date, end date, restrictions]
    finelst = []
    borrowlst = []
    status = 0
    # loglst = [] # [Action, Start date, Student, book, duration]

    set_loglst()
    for log in loglst:

        if int(log[1]) <= start:

            start_day = log[1]

            if log[0] == "B":  # BOOK BORROW

                for book in booklst:  # Retrieving the book's restriction status
                    if book[0] == log[3]:
                        status = book[2]

                info = [log[2], log[3], start_day, log[4],
                        status]  # adding the student, book, start date, end date, and restrictions to a list

                studentlst.append(info)
                for book in booklst:
                    if book[0] == log[3]:  # checking if the books match
                        book[1] = int(book[1]) - 1  # decreasing the inventory of the book

                        # temp = str(temp)
                        # book[1] = temp






            elif log[0] == "R":  # BOOK RETURN
                count = - 1

                for student in studentlst:
                    count += 1
                    if ((log[2] == student[0]) and ("$" in student[1])):  # checking their borrow info
                        duration = int(log[1]) - int(student[2])  # finding how long they physically had the book
                        popularlst.append([student[1], duration])  # adding how long they had the book to a list
                        studentlst.pop(count)  # removing the student's info since they returned the book
                        print("borrow time")
                        if student[4] == "TRUE":  # checking the book's restriction status
                            if duration > 7:  # checking if they returned a restricted book in time
                                print("Adding a fine.")
                                fine = (duration - 7) * 5  # adding the fine to the student info
                                print(studentlst)
                                fine_statement = False
                                i = 0
                                index = 0
                                while i < len(studentlst):
                                    if studentlst[i][0] == log[2] and studentlst[i][1][0] == "$":
                                        fine_statement = True
                                        index = i
                                    i += 1
                                if fine_statement:  # checking if they have another
                                    print("Fine statement found")
                                    temp = studentlst[index][1].replace("$", "")
                                    temp = int(temp) + fine
                                    studentlst[index][1] = temp
                                    print(studentlst)


                                else:  # adding a fine statement if they don't already have one
                                    print("Fine statement added")
                                    fine2 = "$" + str(fine)
                                    templst = [student[0], fine2]
                                    studentlst.append(templst)  # adding the student and their fine to the student list

                        else:
                            if duration > 28:  # checking if they're overdue on a unrestricted book
                                fine = (duration - 28) * 5
                                fine2 = "$" + str(fine)
                                templst = [student[0], fine2]
                                print(templst)
                                studentlst.append(templst)  # adding the student and their fine to the student list

                for book in booklst:
                    if book[0] == log[3]:  # checking if the books match
                        temp = int(book[1]) + 1  # increasing the inventory of the book
                        temp = str(temp)
                        book[1] = temp
                        print("returned that hoe")



            elif log[0] == "A":  # BOOK ADDITION
                new = True

                for p in booklst:
                    if p[0] == log[2]:  # checking to see if we have this book already
                        temp = int(p[1]) + 1  # increasing the stock if we do
                        temp = str(temp)
                        p[1] = temp
                        new = False
                if new:
                    book_info = [log[2], "1", "FALSE"]  # adding the new book name, inventory, and restriction status
                    booklst.append(book_info)  # adding this info to the book list

            elif log[0] == "P":  # FINE PAYMENT
                count = -1
                print("Paying a fine")
                for student in studentlst:
                    count += 1  # keeping track of the index
                    print(student[1], "GUATEMALA")
                    print(log[2], "corn")
                    print(student[0], "g")
                    if (("$" in str(student[1])) and (
                            (log[2]) == student[0])):  # checking to find their log with the fine in it
                        debt = student[1].replace("$", "")  # getting rid of the dollar sign to use just the integer

                        if int(debt) - int(log[3]) == 0:  # if they pay the fine in full then we remove their fine info
                            studentlst.pop(count)
                        else:
                            leftover = int(debt) - int(
                                log[3])  # if they don't pay the fine in full then change the fine amount to the new one
                            leftover = "$" + str(leftover)
                            student[1] = leftover
    # return studentlst


def menu():
    start = 30
    set_booklst()
    set_loglst()
    log_processing(start)
    found = False
    choice = int(input(
        "Hi, would you like to \n1. Borrow a book for a certain number of days\n2. See the most popular book in the library\n3. See which books has the highest borrow ratio\n4. See a list of the most popular books or a list of the books with the highest usage ratio\n5. See the pending fines at the end of a specific day\n"))

    if choice == 1:  # MAKE FUNCTION TO REPEAT IF THE BOOK IS NOT FOUND!?
        book_check(found)

    elif choice == 2:  # see the most popular book in the library (borrowed for the most days)
        popular_books()
        print("The most popular book is " + popularlst2[0][0] + " for " + str(popularlst2[0][1]) + " days ")
    elif choice == 3:  # see which book has the highest borrow ratio
        print("yes")
    elif choice == 4:  # see a list of the books with the highest popularity and borrow ratio
        popular_books()
        pick = int(input("Would you like to see a list for 1. highest popularity or 2. highest borrow ratio"))
        if pick == 1:
            print(popularlst2)
        elif pick == 2:
            usage_ratio()
        else:
            print("Sorry that's not an option")
            menu()
    elif choice == 5:  # see pending fines at a particular day
        fine_check()
    else:
        print("Sorry, that's not a choice\n")
        menu()


menu()
library.close()
books.close()
